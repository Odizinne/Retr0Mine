name: Build and Release

on:
  workflow_dispatch:

env:
  QT_VERSION: '6.8.2'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install Qt
        id: qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          add-tools-to-path: true
          cache: true
          modules: 'qtmultimedia'

      - name: Generate and Build with CMake
        shell: pwsh
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build . --config Release
          ls

      - name: Clean release directory
        shell: pwsh
        run: |
          cd build/release
          Rename-Item -Path "appRetr0Mine.exe" -NewName "Retr0Mine.exe"
          Get-ChildItem -Exclude Retr0Mine.exe | Remove-Item -Recurse -Force

      - name: Copy Steam API DLL
        shell: pwsh
        run: |
          Copy-Item "lib\steam\win64\steam_api64.dll" -Destination "build\release\"

      - name: Deploy Qt
        shell: pwsh
        run: |
          cd build\release
          $qmlDir = "D:\a\Retr0Mine\Retr0Mine\Resources\qml"
          windeployqt6 `
              --skip-plugin-types designer,iconengines,qmllint,generic,networkinformation,help,qmltooling,sqldrivers,tls,qmlls `
              --no-opengl-sw `
              --no-system-dxc-compiler `
              --no-compiler-runtime `
              --no-translations `
              --no-system-d3d-compiler `
              --qmldir $qmlDir `
              Retr0Mine.exe

      - name: Zip binaries folder
        shell: pwsh
        run: |
          $zipFile = "build/Retr0Mine_msvc_64.zip"
          $folder = "build/release"
          Compress-Archive -Path $folder -DestinationPath $zipFile

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Retr0Mine_msvc_64
          path: build/Retr0Mine_msvc_64.zip

      - name: Create Installer 
        shell: pwsh
        run: |
          $env:Path += ";${env:ProgramFiles(x86)}\Inno Setup 6"
          iscc.exe installer.iss

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: Retr0Mine_Installer
          path: Output/Retr0Mine_Installer.exe

  linux-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: 'linux'
          cache: true
          add-tools-to-path: true
          modules: 'qtmultimedia'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev fuse libfuse2 libwayland-dev qt6-wayland
          # Configure FUSE for the current user
          sudo modprobe fuse
          sudo groupadd fuse || true
          sudo usermod -a -G fuse $USER

      - name: Generate and Build with CMake
        shell: pwsh
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build . --config Release
          ls

      - name: Create AppDir structure
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/lib
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          mv build/appRetr0Mine AppDir/usr/bin/Retr0Mine
          
          #cp Dependencies/steam/lib/linux64/libsteam_api.so AppDir/usr/lib/

          # Create .desktop file
          cat > AppDir/usr/share/applications/Retr0Mine.desktop << EOF
          [Desktop Entry]
          Name=Retr0Mine
          Exec=Retr0Mine
          Icon=Retr0Mine
          Type=Application
          Categories=Game;
          Comment=Minesweeper game
          EOF
          
          # Copy application icon
          cp resources/icons/icon.png AppDir/usr/share/icons/hicolor/256x256/apps/Retr0Mine.png

      - name: Download linuxdeploy and plugins
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage

      - name: Deploy with linuxdeploy
        run: |
          export QMAKE=$(which qmake6)
          export QML_SOURCES_PATHS=${{ github.workspace }}/qml
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/lib/steam/linux64
          export EXTRA_QT_MODULES="multimedia"
          ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt

      - name: Create startup script
        run: |
          echo '#!/bin/sh
          export LD_LIBRARY_PATH="./usr/lib:$LD_LIBRARY_PATH"
          exec ./AppRun' > AppDir/Retr0Mine.sh
          chmod +x AppDir/Retr0Mine.sh

      - name: Clean unnecessary files
        run: |
          rm -rf AppDir/usr/translations
          rm -rf AppDir/usr/plugins/tls
          
      - name: Zip AppDir
        run: |
          cd AppDir
          zip -r ../Retr0Mine_Linux.zip ./*

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: Retr0Mine_Linux
          path: Retr0Mine_Linux.zip
          
  release:
    runs-on: ubuntu-latest
    needs: [build, linux-build]
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download Windows ZIP
        uses: actions/download-artifact@v4
        with:
          name: Retr0Mine_msvc_64
      - name: Download Windows Installer
        uses: actions/download-artifact@v4
        with:
          name: Retr0Mine_Installer
          path: installer
      - name: Download Linux Build
        uses: actions/download-artifact@v4
        with:
          name: Retr0Mine_Linux
      - name: Download Steam Deck Installer Desktop File
        run: |
          wget https://raw.githubusercontent.com/Odizinne/Retr0Mine/main/Retr0Mine_SteamDeckInstaller.desktop
      - name: Bump version and create release
        id: bump_release
        run: |
          git fetch --tags
          
          # Determine the latest major version tag
          LAST_MAJOR_TAG=$(git tag --list 'v*.*.*' | sed -E 's/^v?([0-9]+)\..*/\1/' | sort -nr | head -n 1)
          
          # Increment the major version number
          if [ -z "$LAST_MAJOR_TAG" ]; then
            NEW_TAG="v1"
          else
            NEW_TAG="v$(($LAST_MAJOR_TAG + 1))"
          fi
          # Check if the tag already exists
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "Tag '$NEW_TAG' already exists. Incrementing to next major version."
            LAST_MAJOR_TAG=$(git tag --list 'v*' | sed -E 's/^v?([0-9]+).*/\1/' | sort -nr | head -n 1)
            NEW_TAG="v$(($LAST_MAJOR_TAG + 1))"
          fi
          echo "New tag is $NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.new_tag }}
          name: ${{ env.new_tag }}
          draft: true
          files: |
            Retr0Mine_msvc_64.zip
            installer/Retr0Mine_Installer.exe
            Retr0Mine_Linux.zip
            Retr0Mine_SteamDeckInstaller.desktop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}